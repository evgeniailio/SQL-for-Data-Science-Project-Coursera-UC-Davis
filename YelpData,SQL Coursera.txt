Data Scientist Role Play: Profiling and Analyzing the Yelp Dataset Coursera Worksheet

This is a 2-part assignment. In the first part, you are asked a series of questions that will help you profile and understand the data just like a data scientist would. For this first part of the assignment, you will be assessed both on the correctness of your findings, as well as the code you used to arrive at your answer. You will be graded on how easy your code is to read, so remember to use proper formatting and comments where necessary.

In the second part of the assignment, you are asked to come up with your own inferences and analysis of the data for a particular research question you want to answer. You will be required to prepare the dataset for the analysis you choose to do. As with the first part, you will be graded, in part, on how easy your code is to read, so use proper formatting and comments to illustrate and communicate your intent as required.

For both parts of this assignment, use this "worksheet." It provides all the questions you are being asked, and your job will be to transfer your answers and SQL coding where indicated into this worksheet so that your peers can review your work. You should be able to use any Text Editor (Windows Notepad, Apple TextEdit, Notepad ++, Sublime Text, etc.) to copy and paste your answers. If you are going to use Word or some other page layout application, just be careful to make sure your answers and code are lined appropriately.
In this case, you may want to save as a PDF to ensure your formatting remains intact for you reviewer.



Part 1: Yelp Dataset Profiling and Understanding

1. Profile the data by finding the total number of records for each of the tables below:
	
i. Attribute table = 10000
ii. Business table = 10000
iii. Category table = 10000
iv. Checkin table = 10000
v. elite_years table = 10000
vi. friend table =  10000
vii. hours table = 10000
viii. photo table =  10000
ix. review table = 10000
x. tip table = 10000
xi. user table = 10000
	
2. Find the total distinct records by either the foreign key or primary key for each table. If two foreign keys are listed in the table, please specify which foreign key.

i. Business = 10000
ii. Hours = 1562
iii. Category = 2643
iv. Attribute = 1115
v. Review = 10000 (Primary key--> id)
vi. Checkin = 493
vii. Photo = 10000 (Primary key--> id)
viii. Tip = 537 (Foreign key --> user_id)
ix. User = 10000
x. Friend = 11
xi. Elite_years = 2780

Note: Primary Keys are denoted in the ER-Diagram with a yellow key icon.	



3. Are there any columns with null values in the Users table? Indicate "yes," or "no."

	Answer: No
	
	
	SQL code used to arrive at answer: SELECT id,name,review_count,yelping_since
                                           FROM user
                                           WHERE name IS NULL;
                                           /*Then checking the in same way each column for null values*/
	
	

	
4. For each table and column listed below, display the smallest (minimum), largest (maximum), and average (mean) value for the following fields:

	i. Table: Review, Column: Stars
	
		min: 1		max: 5		avg: 3.7082
		
	
	ii. Table: Business, Column: Stars
	
		min: 1.0	max: 5.0         avg: 3.6549
		
	
	iii. Table: Tip, Column: Likes
	
		min: 0		max: 2		avg: 0.0144
		
	
	iv. Table: Checkin, Column: Count
	
		min: 1 		max: 53		avg: 1.9414
		
	
	v. Table: User, Column: Review_count
	
		min: 0		max: 2000	avg: 24.2995
		


5. List the cities with the most reviews in descending order:

	SQL code used to arrive at answer: SELECT 
                                           city,
                                           count(id) AS num_of_reviews
                                           FROM business
                                           GROUP BY city
                                           ORDER BY num_of_reviews DESC;
	
	
	Copy and Paste the Result Below:
	+-----------------+----------------+
| city            | num_of_reviews |
+-----------------+----------------+
| Las Vegas       |           1561 |
| Phoenix         |           1001 |
| Toronto         |            985 |
| Scottsdale      |            497 |
| Charlotte       |            468 |
| Pittsburgh      |            353 |
| Montréal        |            337 |
| Mesa            |            304 |
| Henderson       |            274 |
| Tempe           |            261 |
| Edinburgh       |            239 |
| Chandler        |            232 |
| Cleveland       |            189 |
| Gilbert         |            188 |
| Glendale        |            188 |
| Madison         |            176 |
| Mississauga     |            150 |
| Stuttgart       |            141 |
| Peoria          |            105 |
| Markham         |             80 |
| Champaign       |             71 |
| North Las Vegas |             70 |
| North York      |             64 |
| Surprise        |             60 |
| Richmond Hill   |             54 |
+-----------------+----------------+
(Output limit exceeded, 25 of 362 total rows shown)

	
6. Find the distribution of star ratings to the business in the following cities:

i. Avon

SQL code used to arrive at answer:
SELECT 
distinct stars AS star_rating
,COUNT(stars)
FROM business
WHERE city='Avon'
GROUP BY star_rating;


Copy and Paste the Resulting Table Below (2 columns â€“ star rating and count):
+-------------+--------------+
| star_rating | COUNT(stars) |
+-------------+--------------+
|         1.5 |            1 |
|         2.5 |            2 |
|         3.5 |            3 |
|         4.0 |            2 |
|         4.5 |            1 |
|         5.0 |            1 |
+-------------+--------------+

ii. Beachwood

SQL code used to arrive at answer:

SELECT 
distinct stars AS star_rating
,COUNT(stars)
FROM business
WHERE city='Beachwood'
GROUP BY star_rating;



Copy and Paste the Resulting Table Below (2 columns â€“ star rating and count):

+-------------+--------------+
| star_rating | COUNT(stars) |
+-------------+--------------+
|         2.0 |            1 |
|         2.5 |            1 |
|         3.0 |            2 |
|         3.5 |            2 |
|         4.0 |            1 |
|         4.5 |            2 |
|         5.0 |            5 |
+-------------+--------------+		


7. Find the top 3 users based on their total number of reviews:
		
	SQL code used to arrive at answer:
SELECT 
name
,review_count
FROM user
ORDER by review_count DESC
LIMIT 3;	
		
	Copy and Paste the Result Below:
+--------+--------------+
| name   | review_count |
+--------+--------------+
| Gerald |         2000 |
| Sara   |         1629 |
| Yuri   |         1339 |
+--------+--------------+		


8. Does posing more reviews correlate with more fans?

	Please explain your findings and interpretation of the results:

/*Finding the number of fans of each user, along with their number of reviews*/
SELECT 
name
,review_count
,fans
FROM user
ORDER by review_count DESC
LIMIT 3;
+--------+--------------+------+
| name   | review_count | fans |
+--------+--------------+------+
| Gerald |         2000 |  253 |
| Sara   |         1629 |   50 |
| Yuri   |         1339 |   76 |
+--------+--------------+------+	

If we compare the two last columns, the review_count and the number of fans, we 
understand that there is no certain correlation between these two variables.
Specifically, Sara should have more fans than Yuri, but this is not the case. 
	
9. Are there more reviews with the word "love" or with the word "hate" in them?

	Answer: "love"

	
	SQL code used to arrive at answer:

/* We are using simple case statements in order to compute the number of reviews with love or hate in them.*/
SELECT
COUNT(CASE WHEN text LIKE '%love%' THEN 'love' END) AS love
,COUNT(CASE WHEN text LIKE '%hate%' THEN 'hate' END) AS hate
FROM review; 

+------+------+
| love | hate |
+------+------+
| 1780 |  232 |
+------+------+

	
	
10. Find the top 10 users with the most fans:

	SQL code used to arrive at answer:

SELECT 
name
,fans
FROM user
ORDER by fans DESC
LIMIT 10;	
	
	Copy and Paste the Result Below:

-----------+------+
| name      | fans |
+-----------+------+
| Amy       |  503 |
| Mimi      |  497 |
| Harald    |  311 |
| Gerald    |  253 |
| Christine |  173 |
| Lisa      |  159 |
| Cat       |  133 |
| William   |  126 |
| Fran      |  124 |
| Lissa     |  120 |
+-----------+------+	
		

Part 2: Inferences and Analysis

1. Pick one city and category of your choice and group the businesses in that city or category by their overall star rating. Compare the businesses with 2-3 stars to the businesses with 4-5 stars and answer the following questions. Include your code.
	
i. Do the two groups you chose to analyze have a different distribution of hours?

SELECT
id
,stars
,hours /*we take the id and stars from business table and the hours from hours table,
       with an INNER JOIN*/
,CASE  
    WHEN stars>=2.0 AND stars<=3.0 THEN '2-3' 
    WHEN stars>=4.0 AND stars<=5.0 THEN '4-5'
ELSE 'Other'   /*we use a CASE statement in order to categorize the businesses in 
               Edinburgh according to their star category they belong to*/
    END star_category
FROM business INNER JOIN hours ON business.id=hours.business_id
WHERE city='Edinburgh' ; 

+------------------------+-------+-----------------------+---------------+
| id                     | stars | hours                 | star_category |
+------------------------+-------+-----------------------+---------------+
| -tKN8LLme5IMC9AjzB9y9Q |   3.5 | Monday|9:00-18:00     | Other         |
| -tKN8LLme5IMC9AjzB9y9Q |   3.5 | Tuesday|9:00-18:00    | Other         |
| -tKN8LLme5IMC9AjzB9y9Q |   3.5 | Friday|9:00-18:00     | Other         |
| -tKN8LLme5IMC9AjzB9y9Q |   3.5 | Wednesday|9:00-18:00  | Other         |
| -tKN8LLme5IMC9AjzB9y9Q |   3.5 | Thursday|9:00-18:00   | Other         |
| -tKN8LLme5IMC9AjzB9y9Q |   3.5 | Saturday|9:00-18:00   | Other         |
| 07h3mGtTovPJE660nX6E-A |   2.0 | Sunday|22:30-3:00     | 2-3           |
| 07h3mGtTovPJE660nX6E-A |   2.0 | Friday|22:00-3:00     | 2-3           |
| 07h3mGtTovPJE660nX6E-A |   2.0 | Saturday|22:00-3:00   | 2-3           |
| 07h3mGtTovPJE660nX6E-A |   2.0 | Thursday|22:30-3:00   | 2-3           |
| 2aiaryk7kgUBhXhVu-9vHg |   4.0 | Monday|12:00-22:30    | 4-5           |
| 2aiaryk7kgUBhXhVu-9vHg |   4.0 | Tuesday|12:00-22:30   | 4-5           |
| 2aiaryk7kgUBhXhVu-9vHg |   4.0 | Friday|12:00-22:30    | 4-5           |
| 2aiaryk7kgUBhXhVu-9vHg |   4.0 | Wednesday|12:00-22:30 | 4-5           |
| 2aiaryk7kgUBhXhVu-9vHg |   4.0 | Thursday|12:00-22:30  | 4-5           |
| 2aiaryk7kgUBhXhVu-9vHg |   4.0 | Sunday|12:00-22:30    | 4-5           |
| 2aiaryk7kgUBhXhVu-9vHg |   4.0 | Saturday|12:00-22:30  | 4-5           |
+------------------------+-------+-----------------------+---------------+

As we can clearly see, the businesses that belong to the 2-3 category have a distribution at about 22:00-3:00 am. That means they work at night. On the other hand,
those that belong in the 4-5 category work the rest hours of the day, which means from about 12:00-22:30 pm.



ii. Do the two groups you chose to analyze have a different number of reviews?

SELECT
id
,stars
,review_count  /* We just added the review_count column */
,hours /*we take the id and stars from business table and the hours from hours table,
       with an INNER JOIN*/
,CASE  
    WHEN stars>=2.0 AND stars<=3.0 THEN '2-3' 
    WHEN stars>=4.0 AND stars<=5.0 THEN '4-5'
ELSE 'Other'   /*we use a CASE statement in order to categorize the businesses in 
               Edinburgh according to their star category they belong to*/
    END star_category
FROM business INNER JOIN hours ON business.id=hours.business_id
WHERE city='Edinburgh' ; 

+-------+--------------+-----------------------+---------------+
| stars | review_count | hours                 | star_category |
+-------+--------------+-----------------------+---------------+
|   3.5 |            6 | Monday|9:00-18:00     | Other         |
|   3.5 |            6 | Tuesday|9:00-18:00    | Other         |
|   3.5 |            6 | Friday|9:00-18:00     | Other         |
|   3.5 |            6 | Wednesday|9:00-18:00  | Other         |
|   3.5 |            6 | Thursday|9:00-18:00   | Other         |
|   3.5 |            6 | Saturday|9:00-18:00   | Other         |
|   2.0 |           11 | Sunday|22:30-3:00     | 2-3           |
|   2.0 |           11 | Friday|22:00-3:00     | 2-3           |
|   2.0 |           11 | Saturday|22:00-3:00   | 2-3           |
|   2.0 |           11 | Thursday|22:30-3:00   | 2-3           |
|   4.0 |           37 | Monday|12:00-22:30    | 4-5           |
|   4.0 |           37 | Tuesday|12:00-22:30   | 4-5           |
|   4.0 |           37 | Friday|12:00-22:30    | 4-5           |
|   4.0 |           37 | Wednesday|12:00-22:30 | 4-5           |
|   4.0 |           37 | Thursday|12:00-22:30  | 4-5           |
|   4.0 |           37 | Sunday|12:00-22:30    | 4-5           |
|   4.0 |           37 | Saturday|12:00-22:30  | 4-5           |
+-------+--------------+-----------------------+---------------+

As we can see the number of reviews for the 2-3 category----> 11
                                            4-5 category----> 37
         
         
iii. Are you able to infer anything from the location data provided between these two groups? Explain.

As we can understand all of these businesses are found in the same neighborhood in Edinburgh. Also the businesses in each category share the same postal code
which means they are in the same area. From the distribution of hours we can assume that the ones working late hours may be bars,clubs etc

SQL code used for analysis:
SELECT
stars
,review_count
,CASE  
    WHEN stars>=2.0 AND stars<=3.0 THEN '2-3' 
    WHEN stars>=4.0 AND stars<=5.0 THEN '4-5'
ELSE 'Other'   /*we use a CASE statement in order to categorize the businesses in 
               Edinburgh according to their star category they belong to*/
    END star_category
,neighborhood
,postal_code
FROM business 
WHERE city='Edinburgh' ; 

+-------+--------------+---------------+--------------+-------------+
| stars | review_count | star_category | neighborhood | postal_code |
+-------+--------------+---------------+--------------+-------------+
|   3.5 |            6 | Other         | Leith        | EH7 5RQ     |
|   3.5 |            6 | Other         | Leith        | EH7 5RQ     |
|   3.5 |            6 | Other         | Leith        | EH7 5RQ     |
|   3.5 |            6 | Other         | Leith        | EH7 5RQ     |
|   3.5 |            6 | Other         | Leith        | EH7 5RQ     |
|   3.5 |            6 | Other         | Leith        | EH7 5RQ     |
|   2.0 |           11 | 2-3           | New Town     | EH1 3AA     |
|   2.0 |           11 | 2-3           | New Town     | EH1 3AA     |
|   2.0 |           11 | 2-3           | New Town     | EH1 3AA     |
|   2.0 |           11 | 2-3           | New Town     | EH1 3AA     |
|   4.0 |           37 | 4-5           | New Town     | EH2 4BA     |
|   4.0 |           37 | 4-5           | New Town     | EH2 4BA     |
|   4.0 |           37 | 4-5           | New Town     | EH2 4BA     |
|   4.0 |           37 | 4-5           | New Town     | EH2 4BA     |
|   4.0 |           37 | 4-5           | New Town     | EH2 4BA     |
|   4.0 |           37 | 4-5           | New Town     | EH2 4BA     |
|   4.0 |           37 | 4-5           | New Town     | EH2 4BA     |
+-------+--------------+---------------+--------------+-------------+

		
		
2. Group business based on the ones that are open and the ones that are closed. What differences can you find between the ones that are still open and the ones that are closed? List at least two differences and the SQL code you used to arrive at your answer.
		
i. Difference 1: As we can see from below, the number of closed businesses have an average star review of ~3.5 stars and the open businesses an average of ~3.7 stars.
         
         
ii. Difference 2: Moreover, the number of closed businesses have an average number of reviews of ~23 stars and the open businesses an average of 32 reviews.
         
         


SELECT
COUNT(id) AS number_of_businesses
,AVG(review_count)
,AVG(stars)
,is_open
FROM business
GROUP BY is_open;
 

| number_of_businesses | AVG(review_count) |    AVG(stars) | is_open |
+----------------------+-------------------+---------------+---------+
|                 1520 |     23.1980263158 | 3.52039473684 |       0 |
|                 8480 |     31.7570754717 | 3.67900943396 |       1 |

	
	
3. For this last part of your analysis, you are going to choose the type of analysis you want to conduct on the Yelp dataset and are going to prepare the data for analysis.

Ideas for analysis include: Parsing out keywords and business attributes for sentiment analysis, clustering businesses to find commonalities or anomalies between them, predicting the overall star rating for a business, predicting the number of fans a user will have, and so on. These are just a few examples to get you started, so feel free to be creative and come up with your own problem you want to solve. Provide answers, in-line, to all of the following:
	
i. Indicate the type of analysis you chose to do: Sentiment Analysis based on the keyword "lunch".
         
         
ii. Write 1-2 brief paragraphs on the type of data you will need for your analysis and why you chose that data:

   The goal of this type of analysis is to find the best restaurant for lunch in Phoenix. 
For that reason we are going to need three tables from the database.The business table to specify the city,the stars and the number of reviews, the 
category table to specify the category restaurant and the attribute table, in order to specify that we want the restaurants that provide lunch.
   With a quick view of the output data we can see that the top two restaurants based on the stars value are  Charlie D's Catfish & Chicken and
Bootleggers Modern American Smokehouse. If we had to decide between these two it would be better to go with the second choice on the list, because
of the large amount of reviews. This means that more customers prefer that certain restaurant.         
                          
                  
iii. Output of your finished dataset:

+----------------------------------------+-------------+-------+--------------+
| name                                   | name        | stars | review_count |
+----------------------------------------+-------------+-------+--------------+
| Charlie D's Catfish & Chicken          | GoodForMeal |   4.5 |            7 |
| Bootleggers Modern American Smokehouse | GoodForMeal |   4.0 |          431 |
| Five Guys                              | GoodForMeal |   3.5 |           63 |
| Gallagher's                            | GoodForMeal |   3.0 |           60 |
| McDonald's                             | GoodForMeal |   2.0 |            8 |
+----------------------------------------+-------------+-------+--------------+
         
         
iv. Provide the SQL code you used to create your final dataset:
SELECT
business.name
,attribute.name
,stars
,review_count
       /*We use a triple inner join on the business,category and attribute tables.
         We want to find the best restaurant in Phoenix for lunch, based on the 
         stars and count review they have.*/
FROM ((category INNER JOIN attribute ON category.business_id=attribute.business_id)
      INNER JOIN business ON business.id=attribute.business_id)
WHERE category = 'Restaurants' AND city='Phoenix' AND value LIKE '%"lunch": true%'
      /* With the WHERE query we specify the 3 things we need to categorize, 
      which are restaurants in Phoenix that provide lunch.*/
ORDER BY stars DESC;